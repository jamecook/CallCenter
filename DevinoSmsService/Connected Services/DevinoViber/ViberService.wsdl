<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://ws.devinosms.com" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" targetNamespace="http://ws.devinosms.com" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Сервис позволяющий отправлять Viber сообщения</wsdl:documentation>
  <wsdl:types>
    <s:schema elementFormDefault="qualified" targetNamespace="http://ws.devinosms.com">
      <s:element name="GetMessageState">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="sessionID" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="messageID" type="s:long" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetMessageStateResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetMessageStateResult" type="tns:ViberMessageStateInfo" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="ViberMessageStateInfo">
        <s:complexContent mixed="false">
          <s:extension base="tns:MessageStateInfo">
            <s:sequence>
              <s:element minOccurs="1" maxOccurs="1" name="State" type="tns:InstantMessageStatus" />
              <s:element minOccurs="0" maxOccurs="1" name="ResentSms" type="tns:ArrayOfViberSmsMessageStateInfo" />
            </s:sequence>
          </s:extension>
        </s:complexContent>
      </s:complexType>
      <s:complexType name="MessageStateInfo">
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="CreationDateUtc" nillable="true" type="s:dateTime" />
          <s:element minOccurs="1" maxOccurs="1" name="SubmittedDateUtc" nillable="true" type="s:dateTime" />
          <s:element minOccurs="1" maxOccurs="1" name="ReportedDateUtc" nillable="true" type="s:dateTime" />
          <s:element minOccurs="1" maxOccurs="1" name="TimeStampUtc" type="s:dateTime" />
          <s:element minOccurs="0" maxOccurs="1" name="StateDescription" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="Price" nillable="true" type="s:decimal" />
        </s:sequence>
      </s:complexType>
      <s:complexType name="SmsMessageStateInfo">
        <s:complexContent mixed="false">
          <s:extension base="tns:MessageStateInfo">
            <s:sequence>
              <s:element minOccurs="1" maxOccurs="1" name="State" type="tns:MessageState" />
            </s:sequence>
          </s:extension>
        </s:complexContent>
      </s:complexType>
      <s:simpleType name="MessageState">
        <s:restriction base="s:string">
          <s:enumeration value="Optimized" />
          <s:enumeration value="Errors" />
          <s:enumeration value="Tarificated" />
          <s:enumeration value="StopListRejected" />
          <s:enumeration value="DuplicateRejected" />
          <s:enumeration value="PolicyRejected" />
          <s:enumeration value="ErrorSendingDateTimeInterpretation" />
          <s:enumeration value="Sent" />
          <s:enumeration value="LocalQueued" />
          <s:enumeration value="Parked" />
          <s:enumeration value="Queued" />
          <s:enumeration value="Sending_To_Gateway" />
          <s:enumeration value="Sending_To_Recipient" />
          <s:enumeration value="SentFromQueue" />
          <s:enumeration value="Delivered_To_Recipient" />
          <s:enumeration value="Error_Invalid_Destination_Address" />
          <s:enumeration value="Error_Invalid_Source_Address" />
          <s:enumeration value="Error_Incompatible_Destination" />
          <s:enumeration value="Error_Rejected" />
          <s:enumeration value="Error_Expired" />
          <s:enumeration value="Deleted" />
          <s:enumeration value="Devino_Rejected" />
          <s:enumeration value="Unknown" />
          <s:enumeration value="Message_Length_is_invalid" />
          <s:enumeration value="Command_Length_is_invalid" />
          <s:enumeration value="Invalid_Command_ID" />
          <s:enumeration value="Incorrect_BIND_Status_for_given_command" />
          <s:enumeration value="ESME_Already_in_Bound_State" />
          <s:enumeration value="Invalid_Priority_Flag" />
          <s:enumeration value="Invalid_Registered_Delivery_Flag" />
          <s:enumeration value="System_Error" />
          <s:enumeration value="Message_ID_is_invalid" />
          <s:enumeration value="Bind_Failed" />
          <s:enumeration value="Invalid_Password" />
          <s:enumeration value="Invalid_System_ID" />
          <s:enumeration value="Cancel_SM_Failed" />
          <s:enumeration value="Replace_SM_Failed" />
          <s:enumeration value="Message_Queue_Full" />
          <s:enumeration value="Invalid_Service_Type" />
          <s:enumeration value="Invalid_number_of_destinations" />
          <s:enumeration value="Invalid_Distribution_List_name" />
          <s:enumeration value="Destination_flag_is_invalid" />
          <s:enumeration value="Invalid_request" />
          <s:enumeration value="Invalid_esm_class_field_data" />
          <s:enumeration value="Cannot_Submit_to_Distribution_List" />
          <s:enumeration value="submit_sm_or_submit_multi_failed" />
          <s:enumeration value="Invalid_Source_address_TON" />
          <s:enumeration value="Invalid_Source_address_NPI" />
          <s:enumeration value="Invalid_Destination_address_TON" />
          <s:enumeration value="Invalid_Destination_address_NPI" />
          <s:enumeration value="Invalid_system_type_field" />
          <s:enumeration value="Invalid_replace_if_present_flag" />
          <s:enumeration value="Invalid_number_of_messages" />
          <s:enumeration value="Throttling_error" />
          <s:enumeration value="Invalid_Scheduled_Delivery_Time" />
          <s:enumeration value="Invalid_message_validity_period" />
          <s:enumeration value="Predefined_Message_Invalid_or_Not_Found" />
          <s:enumeration value="ESME_Receiver_Temporary_App_Error_Code" />
          <s:enumeration value="ESME_Receiver_Permanent_App_Error_Code" />
          <s:enumeration value="ESME_Receiver_Reject_Message_Error_Code" />
          <s:enumeration value="query_sm_request_failed" />
          <s:enumeration value="Error_in_the_optional_part_of_the_PDU_Body" />
          <s:enumeration value="Optional_Parameter_not_allowed" />
          <s:enumeration value="Invalid_Parameter_Length" />
          <s:enumeration value="Expected_Optional_Parameter_missing" />
          <s:enumeration value="Invalid_Optional_Parameter_Value" />
          <s:enumeration value="Delivery_Failure" />
        </s:restriction>
      </s:simpleType>
      <s:complexType name="ViberSmsMessageStateInfo">
        <s:complexContent mixed="false">
          <s:extension base="tns:SmsMessageStateInfo">
            <s:sequence>
              <s:element minOccurs="1" maxOccurs="1" name="Id" type="s:long" />
            </s:sequence>
          </s:extension>
        </s:complexContent>
      </s:complexType>
      <s:simpleType name="InstantMessageStatus">
        <s:restriction base="s:string">
          <s:enumeration value="Enqueued" />
          <s:enumeration value="Sent" />
          <s:enumeration value="Delivered" />
          <s:enumeration value="Read" />
          <s:enumeration value="Undelivered" />
          <s:enumeration value="Failed" />
          <s:enumeration value="Unknown" />
          <s:enumeration value="Expired" />
        </s:restriction>
      </s:simpleType>
      <s:complexType name="ArrayOfViberSmsMessageStateInfo">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="unbounded" name="ViberSmsMessageStateInfo" nillable="true" type="tns:ViberSmsMessageStateInfo" />
        </s:sequence>
      </s:complexType>
      <s:element name="GetSessionID">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="login" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="password" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetSessionIDResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetSessionIDResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="SendMessage">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="sessionID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="message" type="tns:Message" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="Message">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="1" name="Data" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="DelayUntilUtc" nillable="true" type="s:dateTime" />
          <s:element minOccurs="0" maxOccurs="1" name="DestinationAddresses" type="tns:ArrayOfString" />
          <s:element minOccurs="0" maxOccurs="1" name="SourceAddress" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="ReceiptRequested" type="s:boolean" />
          <s:element minOccurs="1" maxOccurs="1" name="Validity" nillable="true" type="s:int" />
          <s:element minOccurs="0" maxOccurs="1" name="Optionals" type="tns:ArrayOfString" />
        </s:sequence>
      </s:complexType>
      <s:complexType name="ArrayOfString">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string" />
        </s:sequence>
      </s:complexType>
      <s:element name="SendMessageResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="SendMessageResult" type="tns:ArrayOfString" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="SendMessageWithResend">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="sessionID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="message" type="tns:Message" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="SendMessageWithResendResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="SendMessageWithResendResult" type="tns:ArrayOfString" />
          </s:sequence>
        </s:complexType>
      </s:element>
    </s:schema>
  </wsdl:types>
  <wsdl:message name="GetMessageStateSoapIn">
    <wsdl:part name="parameters" element="tns:GetMessageState" />
  </wsdl:message>
  <wsdl:message name="GetMessageStateSoapOut">
    <wsdl:part name="parameters" element="tns:GetMessageStateResponse" />
  </wsdl:message>
  <wsdl:message name="GetSessionIDSoapIn">
    <wsdl:part name="parameters" element="tns:GetSessionID" />
  </wsdl:message>
  <wsdl:message name="GetSessionIDSoapOut">
    <wsdl:part name="parameters" element="tns:GetSessionIDResponse" />
  </wsdl:message>
  <wsdl:message name="SendMessageSoapIn">
    <wsdl:part name="parameters" element="tns:SendMessage" />
  </wsdl:message>
  <wsdl:message name="SendMessageSoapOut">
    <wsdl:part name="parameters" element="tns:SendMessageResponse" />
  </wsdl:message>
  <wsdl:message name="SendMessageWithResendSoapIn">
    <wsdl:part name="parameters" element="tns:SendMessageWithResend" />
  </wsdl:message>
  <wsdl:message name="SendMessageWithResendSoapOut">
    <wsdl:part name="parameters" element="tns:SendMessageWithResendResponse" />
  </wsdl:message>
  <wsdl:portType name="ViberServiceSoap">
    <wsdl:operation name="GetMessageState">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Возвращает статус сообщения и время обновления статуса</wsdl:documentation>
      <wsdl:input message="tns:GetMessageStateSoapIn" />
      <wsdl:output message="tns:GetMessageStateSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetSessionID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Возвращает идентификатор сессии для пользователя</wsdl:documentation>
      <wsdl:input message="tns:GetSessionIDSoapIn" />
      <wsdl:output message="tns:GetSessionIDSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="SendMessage">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Отправляет сообщение адресатам и возвращает системные идентификаторы сообщений</wsdl:documentation>
      <wsdl:input message="tns:SendMessageSoapIn" />
      <wsdl:output message="tns:SendMessageSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="SendMessageWithResend">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Отправляет сообщение адресатам и возвращает системные идентификаторы сообщений; при необходимости выполняет переотправку с помощью смс</wsdl:documentation>
      <wsdl:input message="tns:SendMessageWithResendSoapIn" />
      <wsdl:output message="tns:SendMessageWithResendSoapOut" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ViberServiceSoap" type="tns:ViberServiceSoap">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <wsdl:operation name="GetMessageState">
      <soap:operation soapAction="http://ws.devinosms.com/GetMessageState" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSessionID">
      <soap:operation soapAction="http://ws.devinosms.com/GetSessionID" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SendMessage">
      <soap:operation soapAction="http://ws.devinosms.com/SendMessage" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SendMessageWithResend">
      <soap:operation soapAction="http://ws.devinosms.com/SendMessageWithResend" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ViberServiceSoap12" type="tns:ViberServiceSoap">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <wsdl:operation name="GetMessageState">
      <soap12:operation soapAction="http://ws.devinosms.com/GetMessageState" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSessionID">
      <soap12:operation soapAction="http://ws.devinosms.com/GetSessionID" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SendMessage">
      <soap12:operation soapAction="http://ws.devinosms.com/SendMessage" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SendMessageWithResend">
      <soap12:operation soapAction="http://ws.devinosms.com/SendMessageWithResend" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ViberService">
    <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Сервис позволяющий отправлять Viber сообщения</wsdl:documentation>
    <wsdl:port name="ViberServiceSoap" binding="tns:ViberServiceSoap">
      <soap:address location="http://ws-wsdl.devinotele.com/ViberService.asmx" />
    </wsdl:port>
    <wsdl:port name="ViberServiceSoap12" binding="tns:ViberServiceSoap12">
      <soap12:address location="http://ws-wsdl.devinotele.com/ViberService.asmx" />
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>